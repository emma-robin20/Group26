# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= 2){
children_temp$infected[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
View(children_temp)
rate <- 80
children_temp <- children
# loop until all children are infected
while(length(which(children_temp$infected == 1)) == nrow(children_temp)){
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected[i] == 0){next}
for(j in 1:nrow(children_temp)){
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
}
View(children_temp)
rate <- 80
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected[i] == 0){next}
for(j in 1:nrow(children_temp)){
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
View(children_temp)
children_temp <- children
children_temp <- children
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected[i] == 0){next}
for(j in 1:nrow(children_temp)){
if(children_temp$infected[j] == 1)
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
View(children_temp)
children_temp <- children
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected[i] == 0){next}
for(j in 1:nrow(children_temp)){
if(children_temp$infected[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
View(children_temp)
children <- data.frame(
"number"          = 1:31,
"infected_s"      = rep(0, 31),
"infected_e"      = rep(0, 31),
"day"             = rep(1, 31),
"infected_from"   = rep("", 31)
)
children$infected[which(children$number == 1)] <- 1
rate <- 80
children_temp <- children
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
View(children_temp)
View(children_temp)
children <- data.frame(
"number"          = 1:31,
"infected_s"      = rep(0, 31),
"infected_e"      = rep(0, 31),
"day"             = rep(1, 31),
"infected_from"   = rep("", 31)
)
children$infected_s[which(children$number == 1)] <- 1
View(children)
children$infected_e[which(children$number == 1)] <- 1
children$infected_e[which(children$number == 1)] <- 1
rate <- 80
children_temp <- children
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
View(children_temp)
children <- data.frame(
"number"          = 1:31,
"infected_s"      = rep(0, 31),
"infected_e"      = rep(0, 31),
"day"             = rep(0, 31),
"infected_from"   = rep("", 31)
)
children$infected_s[which(children$number == 1)] <- 1
children$infected_e[which(children$number == 1)] <- 1
rate <- 80
children_temp <- children
day <- 1
# loop until all children are infected
while(length(which(children_temp$infected == 1)) == nrow(children_temp)){
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
chidlren <- rbind(children, children_temp)
children_temp$infected_s <- children_temp$infected_e
children_temp$Day <- day
day <- day + 1
}
View(children_temp)
children_temp <- children
children <- data.frame(
"number"          = 1:31,
"infected_s"      = rep(0, 31),
"infected_e"      = rep(0, 31),
"day"             = rep(0, 31),
"infected_from"   = rep("", 31)
)
children$infected_s[which(children$number == 1)] <- 1
children$infected_e[which(children$number == 1)] <- 1
rate <- 80
children_temp <- children
day <- 1
# loop until all children are infected
while(length(which(children_temp$infected_s == 1)) == nrow(children_temp)){
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
chidlren <- rbind(children, children_temp)
children_temp$infected_s <- children_temp$infected_e
children_temp$Day <- day
day <- day + 1
}
View(children_temp)
# loop until all children are infected
while(length(which(children_temp$infected_s == 1)) != nrow(children_temp)){
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
chidlren <- rbind(children, children_temp)
children_temp$infected_s <- children_temp$infected_e
children_temp$Day <- day
day <- day + 1
}
View(children_temp)
children <- data.frame(
"number"          = 1:31,
"infected_s"      = rep(0, 31),
"infected_e"      = rep(0, 31),
"day"             = rep(0, 31),
"infected_from"   = rep("", 31)
)
children$infected_s[which(children$number == 1)] <- 1
children$infected_e[which(children$number == 1)] <- 1
rate <- 80
children_temp <- children
day <- 1
# loop until all children are infected
while(length(which(children_temp$infected_s == 1)) != nrow(children_temp)){
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
chidlren <- rbind(children, children_temp)
children_temp$infected_s <- children_temp$infected_e
children_temp$day <- day
day <- day + 1
}
View(chidlren)
children <- data.frame(
"number"          = 1:31,
"infected_s"      = rep(0, 31),
"infected_e"      = rep(0, 31),
"day"             = rep(0, 31),
"infected_from"   = rep("", 31)
)
children$infected_s[which(children$number == 1)] <- 1
children$infected_e[which(children$number == 1)] <- 1
rate <- 80
children_temp <- children
day <- 1
length(which(children_temp$infected_s == 1)) != nrow(children_temp)
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
children_temp
children <- rbind(children, children_temp)
children_temp$infected_s <- children_temp$infected_e
View(children_temp)
children_temp$day <- day
day <- day + 1
children_temp$day <- day
View(children_temp)
View(chidlren)
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
View(children)
View(children_temp)
children <- rbind(children, children_temp)
children_temp$infected_s <- children_temp$infected_e
day <- day + 1
children_temp$day <- day
length(which(children_temp$infected_s == 1)) != nrow(children_temp)
children_temp$infected_s
length(which(children_temp$infected_s == 1))
nrow(children_temp)
children <- data.frame(
"number"          = 1:31,
"infected_s"      = rep(0, 31),
"infected_e"      = rep(0, 31),
"day"             = rep(0, 31),
"infected_from"   = rep("", 31)
)
children$infected_s[which(children$number == 1)] <- 1
children$infected_e[which(children$number == 1)] <- 1
rate <- 80
children_temp <- children
day <- 1
# loop until all children are infected
while(length(which(children_temp$infected_s == 1)) != nrow(children_temp)){
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
children <- rbind(children, children_temp)
children_temp$infected_s <- children_temp$infected_e
day <- day + 1
children_temp$day <- day
}
View(children)
rate <- 2
children <- data.frame(
"number"          = 1:31,
"infected_s"      = rep(0, 31),
"infected_e"      = rep(0, 31),
"day"             = rep(0, 31),
"infected_from"   = rep("", 31)
)
children$infected_s[which(children$number == 1)] <- 1
children$infected_e[which(children$number == 1)] <- 1
rate <- 2
children_temp <- children
day <- 1
# loop until all children are infected
while(length(which(children_temp$infected_s == 1)) != nrow(children_temp)){
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= rate){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
children <- rbind(children, children_temp)
children_temp$infected_s <- children_temp$infected_e
day <- day + 1
children_temp$day <- day
}
View(children)
library(shiny); runApp('model_app.R')
runApp('model_app.R')
run_sim <- function(rate, children_number, immunization, immunization_rate){
children_temp <- data.frame(
"number"          = 1:children_number,
"infected_s"      = rep(0, children_number),
"infected_e"      = rep(0, children_number),
"day"             = rep(1, children_number),
"infected_from"   = rep("", children_number),
"rate"            = rep(rate, children_number)
)
children_temp$infected_s[which(children_temp$number == 1)] <- 1
children_temp$infected_e[which(children_temp$number == 1)] <- 1
if(immunization){
for(i in 2:nrow(children_temp)){
if(sample(1:100, 1) <= immunization_rate){
children_temp$rate[i] <- 0
}
}
}
children <- data.frame()
day <- 1
# loop until all children are infected
while(length(which(children_temp$rate == rate)) !=
length(which(children_temp$infected_s == 1))){
# loop through each child to the next - if infect can spread
for(i in 1:nrow(children_temp)){
# can child1 infect child2
if(children_temp$infected_s[i] == 0){next}
for(j in 1:nrow(children_temp)){
# already infected
if(children_temp$infected_s[j] == 1){next}
# child cannot spread from itself to itself
if(children_temp$number[i] == children_temp$number[j]){next}
# random number generation from 1-100 with 2 as the threshold of being able to infect
if(sample(1:100, 1) <= children_temp$rate[j]){
children_temp$infected_e[j] <- 1
children_temp$infected_from[j] <- i
}
}
}
children <- rbind(children, children_temp)
children_temp$infected_s <- children_temp$infected_e
day <- day + 1
children_temp$day <- day
}
return(children)
}
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
getEdges(df)
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
edges <- data.frame(from     = df$infected_e,
#label    = paste("Edge", df$infected_e),
arrows   = "from",
dashes   = TRUE,
to       = df$infected_from
# "color"    = rep("red", nrow(df))
)
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
runApp('model_app.R')
source("~/Documents/GitHub/Group26/sick_simulation.R", echo=TRUE)
children_temp <- data.frame(
"number"          = 1:children_number,
"infected_s"      = rep(0, children_number),
"infected_e"      = rep(0, children_number),
"day"             = rep(1, children_number),
"infected_from"   = rep("", children_number),
"rate"            = rep(rate, children_number)
)
run_sim(rate=.2, children_number=31, immunization=FALSE, immunization_rate=.5)
